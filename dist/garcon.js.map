{"version":3,"file":"garcon.js","sources":["../src/garcon.ts"],"sourcesContent":["ï»¿/// <reference path=\"../typings/tsd.d.ts\" />\r\nimport * as http from 'http';\r\n\r\nimport { Inject, Injector, Annotable } from 'stimpack';\r\nimport { default as pathToRegexp, PathToRegExpKey } from 'path-to-regexp';\r\n\r\nimport Context from './Context';\r\nexport { Context };\r\n\r\nexport interface RequestHandler {\r\n    handleRequest(ctx: Context): Promise<any>;\r\n}\r\n\r\nexport interface RequestHandlerConstructor extends Annotable {\r\n    prototype: RequestHandler;\r\n}\r\n\r\nexport interface Logger {\r\n    info(message:string);\r\n    warn(message:string);\r\n    error(message:string);\r\n}\r\n\r\n@Inject\r\nexport class Garcon {\r\n\r\n    private server: http.Server;\r\n\r\n    private routes: Map<RegExp, [RequestHandler, PathToRegExpKey[]]> = new Map<RegExp, [RequestHandler, PathToRegExpKey[]]>();\r\n\r\n    constructor(private injector: Injector, private logger?: Logger) {\r\n        this.server = new http.Server();\r\n        this.server.on('request', (req: http.ServerRequest, res: http.ServerResponse) => {\r\n            this.handleRequest(req, res);\r\n        });\r\n    }\r\n\r\n    listen(port: number, hostname?: string, backlog?: number) {\r\n        this.server.listen(port, hostname, backlog, (...args) => {\r\n            this.info(`Listening on ${port}`);\r\n            console.log(1);\r\n        });\r\n        this.server.once('listening', (...args) => {\r\n            this.info(`Listening on ${port}`);\r\n            console.log(...args);\r\n        });\r\n        console.log(2);\r\n    }\r\n\r\n    get(route: string, handler: RequestHandlerConstructor) {\r\n        const keys = [];\r\n        const re = pathToRegexp(route, keys, { sensitive: true });\r\n        const hndl = this.injector.get(handler);\r\n        this.routes.set(re, [hndl, keys]);\r\n    }\r\n\r\n    private async handleRequest(req: http.ServerRequest, res: http.ServerResponse) {\r\n        const ctx = new Context(req, res);\r\n        try {\r\n            for (let [route, [handler, keys]] of this.routes) {\r\n                if (route.test(req.url)) {\r\n                    await handler.handleRequest(ctx);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            res.statusCode = 500;\r\n            res.end(e.stack);\r\n        }\r\n    }\r\n\r\n    private info(message: string) {\r\n        this.logger && this.logger.info(message);\r\n    }\r\n    private warn(message: string) {\r\n        this.logger && this.logger.warn(message);\r\n    }\r\n    private error(message: string) {\r\n        this.logger && this.logger.error(message);\r\n    }\r\n}"],"names":["Garcon","Garcon.error","Garcon.warn","Garcon.info","Garcon.handleRequest","Garcon.get","Garcon.listen","Garcon.constructor"],"mappings":"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"}